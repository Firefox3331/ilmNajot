{"ast":null,"code":"import { call, takeLatest, put, take } from \"redux-saga/effects\";\nimport { apiCall } from \"../slice/apiCall.js\";\nimport { getCategories, getCategoriesSuccess, getProducts, getProductsSuccess, postOrderProduct } from \"../slice/userReducer.js\";\nexport function* workGetCategories(action) {\n  const res = yield call(apiCall, \"/category\", \"get\");\n  yield put(getCategoriesSuccess(res.data));\n}\nexport function* workGetProducts(action) {\n  const res = yield call(apiCall, \"/\" + action.payload + \"/product\", \"get\");\n  yield put(getProductsSuccess(res.data));\n}\nexport function* workPostOrderProduct(action) {\n  yield call(apiCall, \"/order-product\", \"post\", action.payload);\n}\nexport function* userSaga() {\n  yield takeLatest(getCategories().type, workGetCategories);\n  yield takeLatest(getProducts().type, workGetProducts);\n  yield takeLatest(postOrderProduct().type, workPostOrderProduct);\n}","map":{"version":3,"names":["call","takeLatest","put","take","apiCall","getCategories","getCategoriesSuccess","getProducts","getProductsSuccess","postOrderProduct","workGetCategories","action","res","data","workGetProducts","payload","workPostOrderProduct","userSaga","type"],"sources":["D:/lessonreact/src/store/sagas/userSaga.js"],"sourcesContent":["import {call, takeLatest, put, take} from \"redux-saga/effects\";\r\nimport {apiCall} from \"../slice/apiCall.js\";\r\nimport { getCategories, getCategoriesSuccess, getProducts, getProductsSuccess, postOrderProduct } from \"../slice/userReducer.js\";\r\n\r\nexport function* workGetCategories(action){\r\n    const res = yield call(apiCall, \"/category\", \"get\");\r\n    yield put(getCategoriesSuccess(res.data));\r\n}\r\n\r\nexport function* workGetProducts(action){\r\n    const res = yield call(apiCall, \"/\"+action.payload+\"/product\", \"get\");\r\n    yield put(getProductsSuccess(res.data));\r\n}\r\n\r\nexport function* workPostOrderProduct(action){\r\n    yield call(apiCall, \"/order-product\", \"post\", action.payload);\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield takeLatest(getCategories().type, workGetCategories);\r\n    yield takeLatest(getProducts().type, workGetProducts);\r\n    yield takeLatest(postOrderProduct().type, workPostOrderProduct);\r\n}\r\n"],"mappings":"AAAA,SAAQA,IAAI,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,QAAO,oBAAoB;AAC9D,SAAQC,OAAO,QAAO,qBAAqB;AAC3C,SAASC,aAAa,EAAEC,oBAAoB,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,gBAAgB,QAAQ,yBAAyB;AAEhI,OAAO,UAAUC,iBAAiBA,CAACC,MAAM,EAAC;EACtC,MAAMC,GAAG,GAAG,MAAMZ,IAAI,CAACI,OAAO,EAAE,WAAW,EAAE,KAAK,CAAC;EACnD,MAAMF,GAAG,CAACI,oBAAoB,CAACM,GAAG,CAACC,IAAI,CAAC,CAAC;AAC7C;AAEA,OAAO,UAAUC,eAAeA,CAACH,MAAM,EAAC;EACpC,MAAMC,GAAG,GAAG,MAAMZ,IAAI,CAACI,OAAO,EAAE,GAAG,GAACO,MAAM,CAACI,OAAO,GAAC,UAAU,EAAE,KAAK,CAAC;EACrE,MAAMb,GAAG,CAACM,kBAAkB,CAACI,GAAG,CAACC,IAAI,CAAC,CAAC;AAC3C;AAEA,OAAO,UAAUG,oBAAoBA,CAACL,MAAM,EAAC;EACzC,MAAMX,IAAI,CAACI,OAAO,EAAE,gBAAgB,EAAE,MAAM,EAAEO,MAAM,CAACI,OAAO,CAAC;AACjE;AAEA,OAAO,UAAUE,QAAQA,CAAA,EAAG;EACxB,MAAMhB,UAAU,CAACI,aAAa,CAAC,CAAC,CAACa,IAAI,EAAER,iBAAiB,CAAC;EACzD,MAAMT,UAAU,CAACM,WAAW,CAAC,CAAC,CAACW,IAAI,EAAEJ,eAAe,CAAC;EACrD,MAAMb,UAAU,CAACQ,gBAAgB,CAAC,CAAC,CAACS,IAAI,EAAEF,oBAAoB,CAAC;AACnE"},"metadata":{},"sourceType":"module","externalDependencies":[]}