{"ast":null,"code":"import{combineReducers,configureStore}from\"@reduxjs/toolkit\";import userReducer from\"./slice/userReducer\";import lostItemReducer from\"./slice/lostItemReducer\";import createSagaMiddleware from\"redux-saga\";import rootSaga from\"./sagas/index\";const rootReducer=combineReducers({userReducer,lostItemReducer});const sagaMiddleware=createSagaMiddleware();export const store=configureStore({reducer:rootReducer,middleware:getDefaultMiddleware=>{return getDefaultMiddleware({serializableCheck:false}).concat(sagaMiddleware);}});sagaMiddleware.run(rootSaga);","map":{"version":3,"names":["combineReducers","configureStore","userReducer","lostItemReducer","createSagaMiddleware","rootSaga","rootReducer","sagaMiddleware","store","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","run"],"sources":["D:/crud/src/store/store.js"],"sourcesContent":["import {combineReducers, configureStore} from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./slice/userReducer\";\r\nimport lostItemReducer from \"./slice/lostItemReducer\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas/index\";\r\n\r\nconst rootReducer = combineReducers({\r\n    userReducer,\r\n    lostItemReducer\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nexport const  store = configureStore({\r\n    reducer:rootReducer,\r\n    middleware:getDefaultMiddleware => {\r\n        return getDefaultMiddleware({serializableCheck: false}).concat(sagaMiddleware);\r\n    }\r\n})\r\n\r\nsagaMiddleware.run(rootSaga);"],"mappings":"AAAA,OAAQA,eAAe,CAAEC,cAAc,KAAO,kBAAkB,CAChE,MAAO,CAAAC,WAAW,KAAM,qBAAqB,CAC7C,MAAO,CAAAC,eAAe,KAAM,yBAAyB,CACrD,MAAO,CAAAC,oBAAoB,KAAM,YAAY,CAC7C,MAAO,CAAAC,QAAQ,KAAM,eAAe,CAEpC,KAAM,CAAAC,WAAW,CAAGN,eAAe,CAAC,CAChCE,WAAW,CACXC,eACJ,CAAC,CAAC,CAEF,KAAM,CAAAI,cAAc,CAAGH,oBAAoB,CAAC,CAAC,CAE7C,MAAO,MAAO,CAAAI,KAAK,CAAGP,cAAc,CAAC,CACjCQ,OAAO,CAACH,WAAW,CACnBI,UAAU,CAACC,oBAAoB,EAAI,CAC/B,MAAO,CAAAA,oBAAoB,CAAC,CAACC,iBAAiB,CAAE,KAAK,CAAC,CAAC,CAACC,MAAM,CAACN,cAAc,CAAC,CAClF,CACJ,CAAC,CAAC,CAEFA,cAAc,CAACO,GAAG,CAACT,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}