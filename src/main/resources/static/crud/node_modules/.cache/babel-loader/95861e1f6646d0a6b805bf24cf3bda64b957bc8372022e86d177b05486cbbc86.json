{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst state = {\n  users: [],\n  totalPages: 0,\n  totalBalance: 0,\n  cardBalance: 0,\n  cashBalance: 0,\n  oddBalances: 0,\n  evenBalnces: 0\n};\nconst slice = createSlice({\n  name: \"user\",\n  initialState: state,\n  reducers: {\n    getUsers(state, action) {},\n    getUsersSuccess(state, action) {\n      state.users = action.payload.userList;\n      state.totalPages = action.payload.totalPages;\n    },\n    getTotalBalance(state, action) {},\n    getTotalBalanceSuccess(state, action) {\n      state.totalBalance = action.payload;\n    },\n    getCashBalance(state, action) {},\n    getCashBalanceSuccess(state, action) {\n      state.cashBalance = action.payload;\n    },\n    getCardBalance(state, action) {},\n    getCardBalanceSuccess(state, action) {\n      state.cardBalance = action.payload;\n    },\n    getOddBalance(state, action) {},\n    getOddBalanceSuccess(state, action) {\n      state.oddBalances = action.payload;\n    },\n    getEvenBalance(state, action) {},\n    getEvenBalanceSuccess(state, action) {\n      state.evenBalnces = action.payload;\n    }\n  }\n});\nexport const {\n  getUsers,\n  getUsersSuccess,\n  getCardBalance,\n  getCardBalanceSuccess,\n  getCashBalance,\n  getCashBalanceSuccess,\n  getEvenBalance,\n  getEvenBalanceSuccess,\n  getTotalBalance,\n  getTotalBalanceSuccess,\n  getOddBalance,\n  getOddBalanceSuccess\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","state","users","totalPages","totalBalance","cardBalance","cashBalance","oddBalances","evenBalnces","slice","name","initialState","reducers","getUsers","action","getUsersSuccess","payload","userList","getTotalBalance","getTotalBalanceSuccess","getCashBalance","getCashBalanceSuccess","getCardBalance","getCardBalanceSuccess","getOddBalance","getOddBalanceSuccess","getEvenBalance","getEvenBalanceSuccess","actions","reducer"],"sources":["D:/lessonreact/src/store/slice/userReducer.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst state = {\r\n    users: [],\r\n    totalPages: 0,\r\n    totalBalance: 0,\r\n    cardBalance: 0,\r\n    cashBalance: 0,\r\n    oddBalances: 0,\r\n    evenBalnces: 0\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: \"user\",\r\n    initialState: state,\r\n    reducers: {\r\n        getUsers(state, action){},\r\n        getUsersSuccess(state,action){\r\n            state.users = action.payload.userList;\r\n            state.totalPages = action.payload.totalPages;\r\n        },\r\n        getTotalBalance(state,action){},\r\n        getTotalBalanceSuccess(state,action){\r\n            state.totalBalance = action.payload;\r\n        },\r\n        getCashBalance(state,action){},\r\n        getCashBalanceSuccess(state,action){\r\n            state.cashBalance = action.payload;\r\n        },\r\n        getCardBalance(state,action){},\r\n        getCardBalanceSuccess(state,action){\r\n            state.cardBalance = action.payload;\r\n        },\r\n        getOddBalance(state,action){},\r\n        getOddBalanceSuccess(state,action){\r\n            state.oddBalances = action.payload;\r\n        },\r\n        getEvenBalance(state,action){},\r\n        getEvenBalanceSuccess(state,action){\r\n            state.evenBalnces = action.payload;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { \r\n    getUsers, \r\n    getUsersSuccess,\r\n    getCardBalance,\r\n    getCardBalanceSuccess,\r\n    getCashBalance,\r\n    getCashBalanceSuccess,\r\n    getEvenBalance,\r\n    getEvenBalanceSuccess,\r\n    getTotalBalance,\r\n    getTotalBalanceSuccess,\r\n    getOddBalance,\r\n    getOddBalanceSuccess\r\n} = slice.actions\r\nexport default slice.reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,KAAK,GAAG;EACVC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,CAAC;EACbC,YAAY,EAAE,CAAC;EACfC,WAAW,EAAE,CAAC;EACdC,WAAW,EAAE,CAAC;EACdC,WAAW,EAAE,CAAC;EACdC,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,KAAK,GAAGT,WAAW,CAAC;EACtBU,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEV,KAAK;EACnBW,QAAQ,EAAE;IACNC,QAAQA,CAACZ,KAAK,EAAEa,MAAM,EAAC,CAAC,CAAC;IACzBC,eAAeA,CAACd,KAAK,EAACa,MAAM,EAAC;MACzBb,KAAK,CAACC,KAAK,GAAGY,MAAM,CAACE,OAAO,CAACC,QAAQ;MACrChB,KAAK,CAACE,UAAU,GAAGW,MAAM,CAACE,OAAO,CAACb,UAAU;IAChD,CAAC;IACDe,eAAeA,CAACjB,KAAK,EAACa,MAAM,EAAC,CAAC,CAAC;IAC/BK,sBAAsBA,CAAClB,KAAK,EAACa,MAAM,EAAC;MAChCb,KAAK,CAACG,YAAY,GAAGU,MAAM,CAACE,OAAO;IACvC,CAAC;IACDI,cAAcA,CAACnB,KAAK,EAACa,MAAM,EAAC,CAAC,CAAC;IAC9BO,qBAAqBA,CAACpB,KAAK,EAACa,MAAM,EAAC;MAC/Bb,KAAK,CAACK,WAAW,GAAGQ,MAAM,CAACE,OAAO;IACtC,CAAC;IACDM,cAAcA,CAACrB,KAAK,EAACa,MAAM,EAAC,CAAC,CAAC;IAC9BS,qBAAqBA,CAACtB,KAAK,EAACa,MAAM,EAAC;MAC/Bb,KAAK,CAACI,WAAW,GAAGS,MAAM,CAACE,OAAO;IACtC,CAAC;IACDQ,aAAaA,CAACvB,KAAK,EAACa,MAAM,EAAC,CAAC,CAAC;IAC7BW,oBAAoBA,CAACxB,KAAK,EAACa,MAAM,EAAC;MAC9Bb,KAAK,CAACM,WAAW,GAAGO,MAAM,CAACE,OAAO;IACtC,CAAC;IACDU,cAAcA,CAACzB,KAAK,EAACa,MAAM,EAAC,CAAC,CAAC;IAC9Ba,qBAAqBA,CAAC1B,KAAK,EAACa,MAAM,EAAC;MAC/Bb,KAAK,CAACO,WAAW,GAAGM,MAAM,CAACE,OAAO;IACtC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EACTH,QAAQ;EACRE,eAAe;EACfO,cAAc;EACdC,qBAAqB;EACrBH,cAAc;EACdC,qBAAqB;EACrBK,cAAc;EACdC,qBAAqB;EACrBT,eAAe;EACfC,sBAAsB;EACtBK,aAAa;EACbC;AACJ,CAAC,GAAGhB,KAAK,CAACmB,OAAO;AACjB,eAAenB,KAAK,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}