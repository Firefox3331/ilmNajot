{"ast":null,"code":"import { call, takeLatest, put } from \"redux-saga/effects\";\nimport { apiCall } from \"../slice/apiCall.js\";\nimport { getChats, getChatsSuccess, getCurrentChat, getCurrentChatSuccess } from \"../slice/chatReducer.js\";\nimport { getMessages } from \"../slice/messageReducer.js\";\nexport function* workGetCurrentChat(action) {\n  console.log(action.payload);\n  const res = yield call(apiCall, \"/chat/create\", \"post\", action.payload);\n  console.log(res.data);\n  yield put(getCurrentChatSuccess(res.data.object));\n  yield put(getMessages(res.data.object.id));\n}\nexport function* workGetChats(action) {\n  const res = yield call(apiCall, \"/chat/\" + action.payload, \"get\");\n  yield put(getChatsSuccess(res.data));\n}\nexport function* chatSaga() {\n  yield takeLatest(getCurrentChat().type, workGetCurrentChat);\n  yield takeLatest(getChats().type, workGetChats);\n}","map":{"version":3,"names":["call","takeLatest","put","apiCall","getChats","getChatsSuccess","getCurrentChat","getCurrentChatSuccess","getMessages","workGetCurrentChat","action","console","log","payload","res","data","object","id","workGetChats","chatSaga","type"],"sources":["D:/crud/src/store/sagas/chatSaga.js"],"sourcesContent":["import {call, takeLatest, put} from \"redux-saga/effects\";\r\nimport {apiCall} from \"../slice/apiCall.js\";\r\nimport { getChats, getChatsSuccess, getCurrentChat, getCurrentChatSuccess } from \"../slice/chatReducer.js\";\r\nimport { getMessages } from \"../slice/messageReducer.js\";\r\n\r\nexport function* workGetCurrentChat(action){\r\n    console.log(action.payload);\r\n    const res = yield call(apiCall, \"/chat/create\", \"post\", action.payload);\r\n    console.log(res.data);\r\n    yield put(getCurrentChatSuccess(res.data.object))\r\n    yield put(getMessages(res.data.object.id));\r\n}\r\n\r\nexport function* workGetChats(action){\r\n    const res = yield call(apiCall, \"/chat/\"+action.payload, \"get\");\r\n    yield put(getChatsSuccess(res.data));\r\n}\r\n\r\nexport function* chatSaga() {\r\n    yield takeLatest(getCurrentChat().type, workGetCurrentChat);\r\n    yield takeLatest(getChats().type, workGetChats);\r\n}"],"mappings":"AAAA,SAAQA,IAAI,EAAEC,UAAU,EAAEC,GAAG,QAAO,oBAAoB;AACxD,SAAQC,OAAO,QAAO,qBAAqB;AAC3C,SAASC,QAAQ,EAAEC,eAAe,EAAEC,cAAc,EAAEC,qBAAqB,QAAQ,yBAAyB;AAC1G,SAASC,WAAW,QAAQ,4BAA4B;AAExD,OAAO,UAAUC,kBAAkBA,CAACC,MAAM,EAAC;EACvCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;EAC3B,MAAMC,GAAG,GAAG,MAAMd,IAAI,CAACG,OAAO,EAAE,cAAc,EAAE,MAAM,EAAEO,MAAM,CAACG,OAAO,CAAC;EACvEF,OAAO,CAACC,GAAG,CAACE,GAAG,CAACC,IAAI,CAAC;EACrB,MAAMb,GAAG,CAACK,qBAAqB,CAACO,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC;EACjD,MAAMd,GAAG,CAACM,WAAW,CAACM,GAAG,CAACC,IAAI,CAACC,MAAM,CAACC,EAAE,CAAC,CAAC;AAC9C;AAEA,OAAO,UAAUC,YAAYA,CAACR,MAAM,EAAC;EACjC,MAAMI,GAAG,GAAG,MAAMd,IAAI,CAACG,OAAO,EAAE,QAAQ,GAACO,MAAM,CAACG,OAAO,EAAE,KAAK,CAAC;EAC/D,MAAMX,GAAG,CAACG,eAAe,CAACS,GAAG,CAACC,IAAI,CAAC,CAAC;AACxC;AAEA,OAAO,UAAUI,QAAQA,CAAA,EAAG;EACxB,MAAMlB,UAAU,CAACK,cAAc,CAAC,CAAC,CAACc,IAAI,EAAEX,kBAAkB,CAAC;EAC3D,MAAMR,UAAU,CAACG,QAAQ,CAAC,CAAC,CAACgB,IAAI,EAAEF,YAAY,CAAC;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}