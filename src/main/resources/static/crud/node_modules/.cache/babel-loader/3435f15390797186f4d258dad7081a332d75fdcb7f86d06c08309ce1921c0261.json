{"ast":null,"code":"import { call, takeLatest, put } from \"redux-saga/effects\";\nimport { apiCall } from \"../slice/apiCall.js\";\nimport { addMessage, getMessages, getMessagesSuccess } from \"../slice/messageReducer.js\";\nimport { setConnectedUser } from \"../slice/userReducer.js\";\nexport function* workGetMessages(action) {\n  const res = yield call(apiCall, \"/message/\" + action.payload);\n  yield put(getMessagesSuccess(res.data));\n}\nexport function* workAddMessage(action) {\n  const data = {\n    chatId: action.payload.chatId,\n    initiatorId: action.payload.initiatorId,\n    participantId: action.payload.participantId,\n    messageBody: action.payload.messageBody\n  };\n  const res = yield call(apiCall, \"/message\", \"post\", data);\n  console.log(res.data);\n  yield put(setConnectedUser(res.data));\n}\nexport function* messageSaga() {\n  yield takeLatest(getMessages().type, workGetMessages);\n  yield takeLatest(addMessage().type, workAddMessage);\n}","map":{"version":3,"names":["call","takeLatest","put","apiCall","addMessage","getMessages","getMessagesSuccess","setConnectedUser","workGetMessages","action","res","payload","data","workAddMessage","chatId","initiatorId","participantId","messageBody","console","log","messageSaga","type"],"sources":["D:/lessonreact/src/store/sagas/messageSaga.js"],"sourcesContent":["import {call, takeLatest, put} from \"redux-saga/effects\";\r\nimport {apiCall} from \"../slice/apiCall.js\";\r\nimport { addMessage, getMessages, getMessagesSuccess } from \"../slice/messageReducer.js\";\r\nimport { setConnectedUser } from \"../slice/userReducer.js\";\r\n\r\nexport function* workGetMessages(action){\r\n    const res = yield call(apiCall, \"/message/\"+action.payload);\r\n    yield put(getMessagesSuccess(res.data))\r\n}\r\n\r\nexport function* workAddMessage(action){\r\n    const data = {chatId: action.payload.chatId, initiatorId: action.payload.initiatorId, participantId: action.payload.participantId, messageBody: action.payload.messageBody}\r\n    const res = yield call(apiCall, \"/message\", \"post\", data);\r\n    console.log(res.data);\r\n    yield put(setConnectedUser(res.data));\r\n}\r\n\r\nexport function* messageSaga() {\r\n    yield takeLatest(getMessages().type, workGetMessages);\r\n    yield takeLatest(addMessage().type, workAddMessage)\r\n}"],"mappings":"AAAA,SAAQA,IAAI,EAAEC,UAAU,EAAEC,GAAG,QAAO,oBAAoB;AACxD,SAAQC,OAAO,QAAO,qBAAqB;AAC3C,SAASC,UAAU,EAAEC,WAAW,EAAEC,kBAAkB,QAAQ,4BAA4B;AACxF,SAASC,gBAAgB,QAAQ,yBAAyB;AAE1D,OAAO,UAAUC,eAAeA,CAACC,MAAM,EAAC;EACpC,MAAMC,GAAG,GAAG,MAAMV,IAAI,CAACG,OAAO,EAAE,WAAW,GAACM,MAAM,CAACE,OAAO,CAAC;EAC3D,MAAMT,GAAG,CAACI,kBAAkB,CAACI,GAAG,CAACE,IAAI,CAAC,CAAC;AAC3C;AAEA,OAAO,UAAUC,cAAcA,CAACJ,MAAM,EAAC;EACnC,MAAMG,IAAI,GAAG;IAACE,MAAM,EAAEL,MAAM,CAACE,OAAO,CAACG,MAAM;IAAEC,WAAW,EAAEN,MAAM,CAACE,OAAO,CAACI,WAAW;IAAEC,aAAa,EAAEP,MAAM,CAACE,OAAO,CAACK,aAAa;IAAEC,WAAW,EAAER,MAAM,CAACE,OAAO,CAACM;EAAW,CAAC;EAC3K,MAAMP,GAAG,GAAG,MAAMV,IAAI,CAACG,OAAO,EAAE,UAAU,EAAE,MAAM,EAAES,IAAI,CAAC;EACzDM,OAAO,CAACC,GAAG,CAACT,GAAG,CAACE,IAAI,CAAC;EACrB,MAAMV,GAAG,CAACK,gBAAgB,CAACG,GAAG,CAACE,IAAI,CAAC,CAAC;AACzC;AAEA,OAAO,UAAUQ,WAAWA,CAAA,EAAG;EAC3B,MAAMnB,UAAU,CAACI,WAAW,CAAC,CAAC,CAACgB,IAAI,EAAEb,eAAe,CAAC;EACrD,MAAMP,UAAU,CAACG,UAAU,CAAC,CAAC,CAACiB,IAAI,EAAER,cAAc,CAAC;AACvD"},"metadata":{},"sourceType":"module","externalDependencies":[]}