{"ast":null,"code":"import { call, takeLatest, put } from \"redux-saga/effects\";\nimport { addPost, getPostSuccess, getPosts, deletePost } from \"../slice/PostReducer\";\nimport { apiCall } from \"../slice/apiCall\";\nimport { addTodo, changeCompleted, getTodos, getTodosSuccess } from \"../slice/todoReducer\";\nexport function* workGetTodos(action) {\n  try {\n    const res = yield call(apiCall, \"/todo/\" + action.payload, \"get\");\n    yield put(getTodosSuccess(res.data));\n  } catch (err) {}\n}\nexport function* workAddTodo(action) {\n  console.log(\"salom\");\n  yield call(apiCall, \"/todo\", \"post\", action.payload);\n  yield put(getTodos(action.payload.userId));\n}\nexport function* workChangeCopleted(action) {\n  try {\n    yield call(apiCall, \"/todo\", \"put\", action.payload);\n    yield put(getTodos(action.payload.userId));\n  } catch (err) {}\n}\nexport function* todoSaga() {\n  yield takeLatest(getTodos().type, workGetTodos);\n  yield takeLatest(changeCompleted().type, workChangeCopleted);\n  yield takeLatest(addTodo().type, workAddTodo);\n}","map":{"version":3,"names":["call","takeLatest","put","addPost","getPostSuccess","getPosts","deletePost","apiCall","addTodo","changeCompleted","getTodos","getTodosSuccess","workGetTodos","action","res","payload","data","err","workAddTodo","console","log","userId","workChangeCopleted","todoSaga","type"],"sources":["D:/lessonreact/src/store/sagas/todoSaga.js"],"sourcesContent":["import { call, takeLatest, put } from \"redux-saga/effects\";\r\nimport { addPost, getPostSuccess, getPosts, deletePost } from \"../slice/PostReducer\";\r\nimport { apiCall } from \"../slice/apiCall\";\r\nimport { addTodo, changeCompleted, getTodos, getTodosSuccess } from \"../slice/todoReducer\";\r\n\r\n\r\nexport function* workGetTodos(action){\r\n    try{\r\n        const res = yield call(apiCall, \"/todo/\"+action.payload, \"get\");\r\n        yield put(getTodosSuccess(res.data));\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\nexport function* workAddTodo(action){\r\n    console.log(\"salom\");\r\n\r\n    yield call(apiCall, \"/todo\", \"post\", action.payload);\r\n    yield put(getTodos(action.payload.userId));\r\n}\r\n\r\nexport function* workChangeCopleted(action){\r\n    try{\r\n        yield call(apiCall, \"/todo\", \"put\", action.payload);\r\n        yield put(getTodos(action.payload.userId));\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\nexport function* todoSaga(){\r\n    yield takeLatest(getTodos().type, workGetTodos);\r\n    yield takeLatest(changeCompleted().type, workChangeCopleted);\r\n    yield takeLatest(addTodo().type, workAddTodo)\r\n}"],"mappings":"AAAA,SAASA,IAAI,EAAEC,UAAU,EAAEC,GAAG,QAAQ,oBAAoB;AAC1D,SAASC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,sBAAsB;AACpF,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,OAAO,EAAEC,eAAe,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,sBAAsB;AAG1F,OAAO,UAAUC,YAAYA,CAACC,MAAM,EAAC;EACjC,IAAG;IACC,MAAMC,GAAG,GAAG,MAAMd,IAAI,CAACO,OAAO,EAAE,QAAQ,GAACM,MAAM,CAACE,OAAO,EAAE,KAAK,CAAC;IAC/D,MAAMb,GAAG,CAACS,eAAe,CAACG,GAAG,CAACE,IAAI,CAAC,CAAC;EACxC,CAAC,QAAMC,GAAG,EAAC,CAEX;AACJ;AAEA,OAAO,UAAUC,WAAWA,CAACL,MAAM,EAAC;EAChCM,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EAEpB,MAAMpB,IAAI,CAACO,OAAO,EAAE,OAAO,EAAE,MAAM,EAAEM,MAAM,CAACE,OAAO,CAAC;EACpD,MAAMb,GAAG,CAACQ,QAAQ,CAACG,MAAM,CAACE,OAAO,CAACM,MAAM,CAAC,CAAC;AAC9C;AAEA,OAAO,UAAUC,kBAAkBA,CAACT,MAAM,EAAC;EACvC,IAAG;IACC,MAAMb,IAAI,CAACO,OAAO,EAAE,OAAO,EAAE,KAAK,EAAEM,MAAM,CAACE,OAAO,CAAC;IACnD,MAAMb,GAAG,CAACQ,QAAQ,CAACG,MAAM,CAACE,OAAO,CAACM,MAAM,CAAC,CAAC;EAC9C,CAAC,QAAMJ,GAAG,EAAC,CAEX;AACJ;AAEA,OAAO,UAAUM,QAAQA,CAAA,EAAE;EACvB,MAAMtB,UAAU,CAACS,QAAQ,CAAC,CAAC,CAACc,IAAI,EAAEZ,YAAY,CAAC;EAC/C,MAAMX,UAAU,CAACQ,eAAe,CAAC,CAAC,CAACe,IAAI,EAAEF,kBAAkB,CAAC;EAC5D,MAAMrB,UAAU,CAACO,OAAO,CAAC,CAAC,CAACgB,IAAI,EAAEN,WAAW,CAAC;AACjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}