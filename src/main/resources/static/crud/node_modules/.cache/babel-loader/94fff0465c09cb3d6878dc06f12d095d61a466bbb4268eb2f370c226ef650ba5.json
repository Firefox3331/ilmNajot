{"ast":null,"code":"import { call, takeLatest, put } from \"redux-saga/effects\";\nimport { addPost, getPostSuccess, getPosts, deletePost } from \"../slice/PostReducer\";\nimport { apiCall } from \"../slice/apiCall\";\nexport function* workGetPosts(action) {\n  try {\n    const res = yield call(apiCall, \"/post/\" + action.payload, \"get\");\n    yield put(getPostSuccess(res.data));\n    console.log(\"ishladi\");\n    console.log(res.data);\n  } catch (err) {}\n}\nexport function* workAddPost(action) {\n  try {\n    console.log(\"action\");\n    yield call(apiCall, \"/post\", \"post\", action.payload.data);\n    yield put(getPosts(action.payload.data.userId));\n  } catch (err) {}\n}\nexport function* workDeletePost(action) {\n  try {\n    yield call(apiCall, \"/post\", \"delete\", action.payload.postId);\n    yield put(getPosts(action.payload.userId));\n  } catch (err) {}\n}\nexport function* postSaga() {\n  yield takeLatest(getPosts().type, workGetPosts);\n  yield takeLatest(addPost().type, workAddPost);\n  yield takeLatest(deletePost().type, workDeletePost);\n}","map":{"version":3,"names":["call","takeLatest","put","addPost","getPostSuccess","getPosts","deletePost","apiCall","workGetPosts","action","res","payload","data","console","log","err","workAddPost","userId","workDeletePost","postId","postSaga","type"],"sources":["D:/lessonreact/src/store/sagas/postSaga.js"],"sourcesContent":["import { call, takeLatest, put } from \"redux-saga/effects\";\r\nimport { addPost, getPostSuccess, getPosts, deletePost } from \"../slice/PostReducer\";\r\nimport { apiCall } from \"../slice/apiCall\";\r\n\r\n\r\nexport function* workGetPosts(action) {\r\n    try {\r\n        const res = yield call(apiCall, \"/post/\"+action.payload, \"get\");\r\n        yield put(getPostSuccess(res.data))\r\n        console.log(\"ishladi\");\r\n        console.log(res.data);\r\n    } catch (err) {\r\n\r\n    }\r\n}   \r\n\r\nexport function* workAddPost(action){\r\n    try{\r\n        console.log(\"action\");\r\n        yield call(apiCall, \"/post\", \"post\", action.payload.data);\r\n        yield put(getPosts(action.payload.data.userId));\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\nexport function* workDeletePost(action){\r\n    try{\r\n        yield call(apiCall, \"/post\", \"delete\", action.payload.postId)\r\n        yield put(getPosts(action.payload.userId))\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function* postSaga() {\r\n    yield takeLatest(getPosts().type, workGetPosts);\r\n    yield takeLatest(addPost().type, workAddPost);\r\n    yield takeLatest(deletePost().type, workDeletePost)\r\n}"],"mappings":"AAAA,SAASA,IAAI,EAAEC,UAAU,EAAEC,GAAG,QAAQ,oBAAoB;AAC1D,SAASC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,sBAAsB;AACpF,SAASC,OAAO,QAAQ,kBAAkB;AAG1C,OAAO,UAAUC,YAAYA,CAACC,MAAM,EAAE;EAClC,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMV,IAAI,CAACO,OAAO,EAAE,QAAQ,GAACE,MAAM,CAACE,OAAO,EAAE,KAAK,CAAC;IAC/D,MAAMT,GAAG,CAACE,cAAc,CAACM,GAAG,CAACE,IAAI,CAAC,CAAC;IACnCC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBD,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACE,IAAI,CAAC;EACzB,CAAC,CAAC,OAAOG,GAAG,EAAE,CAEd;AACJ;AAEA,OAAO,UAAUC,WAAWA,CAACP,MAAM,EAAC;EAChC,IAAG;IACCI,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,MAAMd,IAAI,CAACO,OAAO,EAAE,OAAO,EAAE,MAAM,EAAEE,MAAM,CAACE,OAAO,CAACC,IAAI,CAAC;IACzD,MAAMV,GAAG,CAACG,QAAQ,CAACI,MAAM,CAACE,OAAO,CAACC,IAAI,CAACK,MAAM,CAAC,CAAC;EACnD,CAAC,QAAMF,GAAG,EAAC,CAEX;AACJ;AAEA,OAAO,UAAUG,cAAcA,CAACT,MAAM,EAAC;EACnC,IAAG;IACC,MAAMT,IAAI,CAACO,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAEE,MAAM,CAACE,OAAO,CAACQ,MAAM,CAAC;IAC7D,MAAMjB,GAAG,CAACG,QAAQ,CAACI,MAAM,CAACE,OAAO,CAACM,MAAM,CAAC,CAAC;EAC9C,CAAC,QAAMF,GAAG,EAAC,CAEX;AACJ;AAGA,OAAO,UAAUK,QAAQA,CAAA,EAAG;EACxB,MAAMnB,UAAU,CAACI,QAAQ,CAAC,CAAC,CAACgB,IAAI,EAAEb,YAAY,CAAC;EAC/C,MAAMP,UAAU,CAACE,OAAO,CAAC,CAAC,CAACkB,IAAI,EAAEL,WAAW,CAAC;EAC7C,MAAMf,UAAU,CAACK,UAAU,CAAC,CAAC,CAACe,IAAI,EAAEH,cAAc,CAAC;AACvD"},"metadata":{},"sourceType":"module","externalDependencies":[]}