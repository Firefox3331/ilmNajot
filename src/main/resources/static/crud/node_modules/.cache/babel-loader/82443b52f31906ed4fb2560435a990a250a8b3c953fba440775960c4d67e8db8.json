{"ast":null,"code":"import { call, takeLatest, put, take } from \"redux-saga/effects\";\nimport { apiCall } from \"../slice/apiCall.js\";\nimport { getCurrentUser, getCurrentUserSuccess, searchUserByPhoneNumber, searchUserSuccess } from \"../slice/userReducer.js\";\nexport function* workGetCurrentUser(action) {\n  const res = yield call(apiCall, \"/user/login\", \"post\", action.payload.value);\n  if (res.data.id) {\n    action.payload.navigate('/home');\n  }\n  console.log(res.data);\n  yield put(getCurrentUserSuccess(res.data));\n}\nexport function* workSearchUser(action) {\n  const res = yield call(apiCall, \"/user/search?phoneNumber=\" + action.payload, \"get\");\n  console.log(res.data);\n  yield put(searchUserSuccess(res.data));\n}\nexport function* userSaga() {\n  yield takeLatest(getCurrentUser().type, workGetCurrentUser);\n  yield takeLatest(searchUserByPhoneNumber().type, workSearchUser);\n}","map":{"version":3,"names":["call","takeLatest","put","take","apiCall","getCurrentUser","getCurrentUserSuccess","searchUserByPhoneNumber","searchUserSuccess","workGetCurrentUser","action","res","payload","value","data","id","navigate","console","log","workSearchUser","userSaga","type"],"sources":["D:/lessonreact/src/store/sagas/userSaga.js"],"sourcesContent":["import {call, takeLatest, put, take} from \"redux-saga/effects\";\r\nimport {apiCall} from \"../slice/apiCall.js\";\r\nimport {getCurrentUser,getCurrentUserSuccess, searchUserByPhoneNumber, searchUserSuccess} from \"../slice/userReducer.js\";\r\n\r\nexport function* workGetCurrentUser(action){\r\n    const res = yield call(apiCall, \"/user/login\", \"post\", action.payload.value);\r\n    if(res.data.id){\r\n        action.payload.navigate('/home')\r\n    }\r\n    console.log(res.data);\r\n    yield put(getCurrentUserSuccess(res.data))\r\n}\r\n\r\nexport function* workSearchUser(action){\r\n    const res = yield call(apiCall, \"/user/search?phoneNumber=\"+action.payload, \"get\");\r\n    console.log(res.data);\r\n    yield put(searchUserSuccess(res.data));\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield takeLatest(getCurrentUser().type, workGetCurrentUser);\r\n    yield takeLatest(searchUserByPhoneNumber().type, workSearchUser)\r\n}\r\n"],"mappings":"AAAA,SAAQA,IAAI,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,QAAO,oBAAoB;AAC9D,SAAQC,OAAO,QAAO,qBAAqB;AAC3C,SAAQC,cAAc,EAACC,qBAAqB,EAAEC,uBAAuB,EAAEC,iBAAiB,QAAO,yBAAyB;AAExH,OAAO,UAAUC,kBAAkBA,CAACC,MAAM,EAAC;EACvC,MAAMC,GAAG,GAAG,MAAMX,IAAI,CAACI,OAAO,EAAE,aAAa,EAAE,MAAM,EAAEM,MAAM,CAACE,OAAO,CAACC,KAAK,CAAC;EAC5E,IAAGF,GAAG,CAACG,IAAI,CAACC,EAAE,EAAC;IACXL,MAAM,CAACE,OAAO,CAACI,QAAQ,CAAC,OAAO,CAAC;EACpC;EACAC,OAAO,CAACC,GAAG,CAACP,GAAG,CAACG,IAAI,CAAC;EACrB,MAAMZ,GAAG,CAACI,qBAAqB,CAACK,GAAG,CAACG,IAAI,CAAC,CAAC;AAC9C;AAEA,OAAO,UAAUK,cAAcA,CAACT,MAAM,EAAC;EACnC,MAAMC,GAAG,GAAG,MAAMX,IAAI,CAACI,OAAO,EAAE,2BAA2B,GAACM,MAAM,CAACE,OAAO,EAAE,KAAK,CAAC;EAClFK,OAAO,CAACC,GAAG,CAACP,GAAG,CAACG,IAAI,CAAC;EACrB,MAAMZ,GAAG,CAACM,iBAAiB,CAACG,GAAG,CAACG,IAAI,CAAC,CAAC;AAC1C;AAEA,OAAO,UAAUM,QAAQA,CAAA,EAAG;EACxB,MAAMnB,UAAU,CAACI,cAAc,CAAC,CAAC,CAACgB,IAAI,EAAEZ,kBAAkB,CAAC;EAC3D,MAAMR,UAAU,CAACM,uBAAuB,CAAC,CAAC,CAACc,IAAI,EAAEF,cAAc,CAAC;AACpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}