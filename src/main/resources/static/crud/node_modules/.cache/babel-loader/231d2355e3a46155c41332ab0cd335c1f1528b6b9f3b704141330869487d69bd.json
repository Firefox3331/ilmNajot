{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst state = {\n  currentUser: {},\n  registered: false,\n  lang: 'uz',\n  classes: [],\n  sciences: [],\n  lessons: []\n};\nconst slice = createSlice({\n  name: \"user\",\n  initialState: state,\n  reducers: {\n    getCurrentUser(state, action) {},\n    getCurrentUserSuccess(state, action) {\n      console.log(action.payload);\n      state.currentUser = action.payload;\n    },\n    changeLanguage(state, action) {\n      state.lang = action.payload;\n    },\n    getClasses(state, action) {},\n    getClassesSuccess(state, action) {\n      state.classes = action.payload;\n    },\n    getSciences(state, action) {},\n    getSciencesSuccess(state, action) {\n      state.sciences = action.payload;\n    },\n    getLessons(state, action) {},\n    getLessonsSuccess(state, action) {\n      state.lessons = action.payload;\n    }\n  }\n});\nexport const {\n  getCurrentUser,\n  getCurrentUserSuccess,\n  changeLanguage,\n  getClasses,\n  getClassesSuccess,\n  getSciences,\n  getSciencesSuccess,\n  getLessons,\n  getLessonsSuccess\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","state","currentUser","registered","lang","classes","sciences","lessons","slice","name","initialState","reducers","getCurrentUser","action","getCurrentUserSuccess","console","log","payload","changeLanguage","getClasses","getClassesSuccess","getSciences","getSciencesSuccess","getLessons","getLessonsSuccess","actions","reducer"],"sources":["D:/crud/src/store/slice/userReducer.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst state = {\r\n    currentUser: {},\r\n    registered: false,\r\n    lang: 'uz',\r\n    classes: [],\r\n    sciences: [],\r\n    lessons: []\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: \"user\",\r\n    initialState: state,\r\n    reducers: {\r\n        getCurrentUser(state, action){},\r\n        getCurrentUserSuccess(state, action){\r\n            console.log(action.payload);\r\n            state.currentUser = action.payload;\r\n        },\r\n        changeLanguage(state, action){\r\n            state.lang = action.payload;\r\n        },\r\n        getClasses(state, action){},\r\n        getClassesSuccess(state, action){\r\n            state.classes = action.payload;\r\n        },\r\n        getSciences(state, action){},\r\n        getSciencesSuccess(state, action){\r\n            state.sciences = action.payload;\r\n        },\r\n        getLessons(state, action){},\r\n        getLessonsSuccess(state, action){\r\n            state.lessons = action.payload;\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    getCurrentUser, \r\n    getCurrentUserSuccess, \r\n    changeLanguage, \r\n    getClasses, \r\n    getClassesSuccess,\r\n    getSciences,\r\n    getSciencesSuccess,\r\n    getLessons,\r\n    getLessonsSuccess\r\n} = slice.actions\r\nexport default slice.reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,KAAK,GAAG;EACVC,WAAW,EAAE,CAAC,CAAC;EACfC,UAAU,EAAE,KAAK;EACjBC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,KAAK,GAAGR,WAAW,CAAC;EACtBS,IAAI,EAAE,MAAM;EACZC,YAAY,EAAET,KAAK;EACnBU,QAAQ,EAAE;IACNC,cAAcA,CAACX,KAAK,EAAEY,MAAM,EAAC,CAAC,CAAC;IAC/BC,qBAAqBA,CAACb,KAAK,EAAEY,MAAM,EAAC;MAChCE,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,OAAO,CAAC;MAC3BhB,KAAK,CAACC,WAAW,GAAGW,MAAM,CAACI,OAAO;IACtC,CAAC;IACDC,cAAcA,CAACjB,KAAK,EAAEY,MAAM,EAAC;MACzBZ,KAAK,CAACG,IAAI,GAAGS,MAAM,CAACI,OAAO;IAC/B,CAAC;IACDE,UAAUA,CAAClB,KAAK,EAAEY,MAAM,EAAC,CAAC,CAAC;IAC3BO,iBAAiBA,CAACnB,KAAK,EAAEY,MAAM,EAAC;MAC5BZ,KAAK,CAACI,OAAO,GAAGQ,MAAM,CAACI,OAAO;IAClC,CAAC;IACDI,WAAWA,CAACpB,KAAK,EAAEY,MAAM,EAAC,CAAC,CAAC;IAC5BS,kBAAkBA,CAACrB,KAAK,EAAEY,MAAM,EAAC;MAC7BZ,KAAK,CAACK,QAAQ,GAAGO,MAAM,CAACI,OAAO;IACnC,CAAC;IACDM,UAAUA,CAACtB,KAAK,EAAEY,MAAM,EAAC,CAAC,CAAC;IAC3BW,iBAAiBA,CAACvB,KAAK,EAAEY,MAAM,EAAC;MAC5BZ,KAAK,CAACM,OAAO,GAAGM,MAAM,CAACI,OAAO;IAClC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EACTL,cAAc;EACdE,qBAAqB;EACrBI,cAAc;EACdC,UAAU;EACVC,iBAAiB;EACjBC,WAAW;EACXC,kBAAkB;EAClBC,UAAU;EACVC;AACJ,CAAC,GAAGhB,KAAK,CAACiB,OAAO;AACjB,eAAejB,KAAK,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}