{"ast":null,"code":"import { call, takeLatest, put, take } from \"redux-saga/effects\";\nimport { apiCall } from \"../slice/apiCall.js\";\nimport { addMessage, deleteMessageById, getMessages, getMessagesSuccess, updateMessage } from \"../slice/messageReducer.js\";\nexport function* workGetMessages(action) {\n  const res = yield call(apiCall, \"/message/\" + action.payload, \"get\");\n  yield put(getMessagesSuccess(res.data));\n}\nexport function* workAddMessage(action) {\n  yield call(apiCall, \"/message\", \"post\", action.payload.data);\n  yield put(getMessages(action.payload.chatId));\n}\nexport function* workUpdateMessage(action) {\n  yield call(apiCall, \"/message/\" + action.payload.senderId + \"/\" + action.payload.id, \"put\", action.payload.data);\n}\nexport function* workDeleteMessage(action) {\n  yield call(apiCall, \"/message/\" + action.payload.id, 'delete');\n}\nexport function* messageSaga() {\n  yield takeLatest(getMessages().type, workGetMessages);\n  yield takeLatest(addMessage().type, workAddMessage);\n  yield takeLatest(updateMessage().type, workUpdateMessage);\n  yield takeLatest(deleteMessageById().type, workDeleteMessage);\n}","map":{"version":3,"names":["call","takeLatest","put","take","apiCall","addMessage","deleteMessageById","getMessages","getMessagesSuccess","updateMessage","workGetMessages","action","res","payload","data","workAddMessage","chatId","workUpdateMessage","senderId","id","workDeleteMessage","messageSaga","type"],"sources":["D:/crud/src/store/sagas/messageSaga.js"],"sourcesContent":["import {call, takeLatest, put, take} from \"redux-saga/effects\";\r\nimport {apiCall} from \"../slice/apiCall.js\";\r\nimport { addMessage, deleteMessageById, getMessages, getMessagesSuccess, updateMessage } from \"../slice/messageReducer.js\";\r\n\r\nexport function* workGetMessages(action){\r\n    const res = yield call(apiCall, \"/message/\"+action.payload, \"get\");\r\n    yield put(getMessagesSuccess(res.data));\r\n}\r\n\r\nexport function* workAddMessage(action){\r\n    yield call(apiCall, \"/message\", \"post\", action.payload.data);\r\n    yield put(getMessages(action.payload.chatId))\r\n}\r\n\r\nexport function* workUpdateMessage(action){\r\n    yield call(apiCall, \"/message/\"+action.payload.senderId+\"/\"+action.payload.id, \"put\", action.payload.data)\r\n}\r\n\r\nexport function* workDeleteMessage(action){\r\n    yield call(apiCall, \"/message/\"+action.payload.id, 'delete');\r\n}\r\n\r\nexport function* messageSaga() {\r\n   yield takeLatest(getMessages().type, workGetMessages);\r\n   yield takeLatest(addMessage().type, workAddMessage);\r\n   yield takeLatest(updateMessage().type, workUpdateMessage);\r\n   yield takeLatest(deleteMessageById().type, workDeleteMessage)\r\n}"],"mappings":"AAAA,SAAQA,IAAI,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,QAAO,oBAAoB;AAC9D,SAAQC,OAAO,QAAO,qBAAqB;AAC3C,SAASC,UAAU,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,aAAa,QAAQ,4BAA4B;AAE1H,OAAO,UAAUC,eAAeA,CAACC,MAAM,EAAC;EACpC,MAAMC,GAAG,GAAG,MAAMZ,IAAI,CAACI,OAAO,EAAE,WAAW,GAACO,MAAM,CAACE,OAAO,EAAE,KAAK,CAAC;EAClE,MAAMX,GAAG,CAACM,kBAAkB,CAACI,GAAG,CAACE,IAAI,CAAC,CAAC;AAC3C;AAEA,OAAO,UAAUC,cAAcA,CAACJ,MAAM,EAAC;EACnC,MAAMX,IAAI,CAACI,OAAO,EAAE,UAAU,EAAE,MAAM,EAAEO,MAAM,CAACE,OAAO,CAACC,IAAI,CAAC;EAC5D,MAAMZ,GAAG,CAACK,WAAW,CAACI,MAAM,CAACE,OAAO,CAACG,MAAM,CAAC,CAAC;AACjD;AAEA,OAAO,UAAUC,iBAAiBA,CAACN,MAAM,EAAC;EACtC,MAAMX,IAAI,CAACI,OAAO,EAAE,WAAW,GAACO,MAAM,CAACE,OAAO,CAACK,QAAQ,GAAC,GAAG,GAACP,MAAM,CAACE,OAAO,CAACM,EAAE,EAAE,KAAK,EAAER,MAAM,CAACE,OAAO,CAACC,IAAI,CAAC;AAC9G;AAEA,OAAO,UAAUM,iBAAiBA,CAACT,MAAM,EAAC;EACtC,MAAMX,IAAI,CAACI,OAAO,EAAE,WAAW,GAACO,MAAM,CAACE,OAAO,CAACM,EAAE,EAAE,QAAQ,CAAC;AAChE;AAEA,OAAO,UAAUE,WAAWA,CAAA,EAAG;EAC5B,MAAMpB,UAAU,CAACM,WAAW,CAAC,CAAC,CAACe,IAAI,EAAEZ,eAAe,CAAC;EACrD,MAAMT,UAAU,CAACI,UAAU,CAAC,CAAC,CAACiB,IAAI,EAAEP,cAAc,CAAC;EACnD,MAAMd,UAAU,CAACQ,aAAa,CAAC,CAAC,CAACa,IAAI,EAAEL,iBAAiB,CAAC;EACzD,MAAMhB,UAAU,CAACK,iBAAiB,CAAC,CAAC,CAACgB,IAAI,EAAEF,iBAAiB,CAAC;AAChE"},"metadata":{},"sourceType":"module","externalDependencies":[]}